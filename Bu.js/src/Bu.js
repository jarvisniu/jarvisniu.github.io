// Generated by CoffeeScript 1.10.0
var base, base1;

this.Bu = {
  version: '0.1.0',
  DEFAULT_STROKE_STYLE: '#048',
  DEFAULT_FILL_STYLE: 'rgba(64, 128, 192, 0.5)',
  DEFAULT_DASH_STYLE: [8, 4],
  DEFAULT_STROKE_STYLE_HOVER: 'rgba(255, 128, 0, 0.75)',
  DEFAULT_FILL_STYLE_HOVER: 'rgba(255, 128, 128, 0.5)',
  DEFAULT_TEXT_FILL_STYLE: 'black',
  DEFAULT_IMAGE_SIZE: 20,
  POINT_RENDER_SIZE: 4,
  DEFAULT_BOUND_STROKE_STYLE: '#444',
  DEFAULT_BOUND_DASH_STYLE: [6, 6],
  DEFAULT_NEAR_DIST: 5,
  MOUSE_BUTTON_NONE: -1,
  MOUSE_BUTTON_LEFT: 0,
  MOUSE_BUTTON_MIDDLE: 1,
  MOUSE_BUTTON_RIGHT: 2
};


/*
 * math
 */

Bu.average = function() {
  var i, j, len, ns, sum;
  ns = arguments;
  if (typeof arguments[0] === 'object') {
    ns = arguments[0];
  }
  sum = 0;
  for (j = 0, len = ns.length; j < len; j++) {
    i = ns[j];
    sum += i;
  }
  return sum / ns.length;
};

Bu.bevel = function(x, y) {
  return Math.sqrt(x * x + y * y);
};

Bu.rand = function(from, to) {
  if (to == null) {
    to = from;
    from = 0;
  }
  return Math.random() * (to - from) + from;
};


/*
 * utils
 */

Bu.combineOptions = function(args, defaultOptions) {
  var givenOptions, i;
  if (defaultOptions == null) {
    defaultOptions = {};
  }
  givenOptions = args[args.length - 1];
  if (typeof givenOptions === 'object') {
    for (i in givenOptions) {
      defaultOptions[i] = givenOptions[i];
    }
  }
  return defaultOptions;
};


/*
 * polyfill
 */

Function.prototype.property = function(prop, desc) {
  return Object.defineProperty(this.prototype, prop, desc);
};

(base = Array.prototype).each || (base.each = function(fn) {
  var i;
  i = 0;
  while (i < this.length) {
    fn(this[i]);
    i++;
  }
  return this;
});

(base1 = Array.prototype).map || (base1.map = function(fn) {
  var arr, i;
  arr = [];
  i = 0;
  while (i < this.length) {
    arr.push(fn(this[i]));
    i++;
  }
  return this;
});
