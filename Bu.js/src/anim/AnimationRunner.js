// Generated by CoffeeScript 1.10.0
var hasProp = {}.hasOwnProperty;

Bu.AnimationRunner = (function() {
  function AnimationRunner() {
    this.runningAnimations = [];
  }

  AnimationRunner.prototype.add = function(animation, target, args) {
    var ref;
    this.runningAnimations.push({
      animation: animation,
      target: target,
      startTime: Bu.now(),
      current: animation.data,
      finished: false
    });
    return (ref = animation.init) != null ? ref.call(target, animation, args) : void 0;
  };

  AnimationRunner.prototype.update = function() {
    var anim, finish, i, key, len, now, ref, ref1, ref2, results, t, task;
    now = Bu.now();
    ref = this.runningAnimations;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      task = ref[i];
      if (task.finished) {
        continue;
      }
      anim = task.animation;
      t = (now - task.startTime) / (anim.duration * 1000);
      if (t > 1) {
        finish = true;
        if (anim.repeat) {
          t = 0;
          task.startTime = Bu.now();
        } else {
          t = 1;
          task.finished = true;
        }
      }
      if (anim.from != null) {
        if (anim.from instanceof Object) {
          ref1 = anim.from;
          for (key in ref1) {
            if (!hasProp.call(ref1, key)) continue;
            if (key in anim.to) {
              task.current[key] = anim.to[key] * t - anim.from[key] * (t - 1);
            }
          }
        } else {
          task.current = anim.to * t - anim.from * (t - 1);
        }
        anim.update.apply(task.target, [task.current, t]);
      } else {
        anim.update.apply(task.target, [t, task.current]);
      }
      if (finish) {
        results.push((ref2 = anim.finish) != null ? ref2.call(task.target, anim) : void 0);
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  AnimationRunner.prototype.hookUp = function(renderer) {
    return renderer.on('update', (function(_this) {
      return function() {
        return _this.update();
      };
    })(this));
  };

  return AnimationRunner;

})();

Bu.animationRunner = new Bu.AnimationRunner;

//# sourceMappingURL=AnimationRunner.js.map
