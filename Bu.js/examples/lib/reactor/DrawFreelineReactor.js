// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Bu.DrawFreelineReactor = (function(superClass) {
  extend(DrawFreelineReactor, superClass);

  function DrawFreelineReactor(bu) {
    var line, mouseButton, mouseDownPos, mousePos, polyline;
    this.bu = bu;
    DrawFreelineReactor.__super__.constructor.call(this);
    this.lineSplitThresh = 8;
    mouseButton = Bu.MOUSE_BUTTON_NONE;
    mousePos = new Bu.Point;
    mouseDownPos = new Bu.Point;
    polyline = null;
    line = null;
    this.onMouseDown = (function(_this) {
      return function(e) {
        mouseDownPos.set(e.offsetX, e.offsetY);
        mouseButton = e.button;
        if (mouseButton === Bu.MOUSE_BUTTON_LEFT) {
          polyline = new Bu.Polyline;
          polyline.stroke(Bu.DEFAULT_STROKE_STYLE_HOVER);
          return _this.bu.append(polyline);
        }
      };
    })(this);
    this.onMouseMove = (function(_this) {
      return function(e) {
        mousePos.set(e.offsetX, e.offsetY);
        if (mouseButton === Bu.MOUSE_BUTTON_LEFT) {
          if (mousePos.distanceTo(mouseDownPos) > _this.lineSplitThresh || polyline.vertices.length < 2) {
            polyline.addPoint(mousePos.clone());
            return mouseDownPos.copy(mousePos);
          } else {
            return polyline.vertices[polyline.vertices.length - 1].copy(mousePos);
          }
        }
      };
    })(this);
    this.onMouseUp = (function(_this) {
      return function() {
        mouseButton = Bu.MOUSE_BUTTON_NONE;
        if (polyline != null) {
          polyline.stroke(Bu.DEFAULT_STROKE_STYLE);
          return polyline = null;
        }
      };
    })(this);
  }

  return DrawFreelineReactor;

})(Bu.ReactorBase);

//# sourceMappingURL=DrawFreelineReactor.js.map
