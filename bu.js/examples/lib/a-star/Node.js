// Generated by CoffeeScript 2.1.0
(function() {
  /*
   * A* Node
   */
  AStar.Node = function(net) {
    this.net = net;
    this.state = AStar.NODE_STATE_DEFAULT; // node state flag
    this.g = -1; // distance has gone
    this.h = -1; // shortest distance to the end
    this.id = -1; // indicate the appearance order
    this.position = {}; // node position such as (x, y) or (x, y, z) it's used by Net
    this.neighbours = null; // reachable neighbour nodes, provide by the Net
    return this.prevNode = null; // The last node in the start node direction
  };

  AStar.Node.prototype = {
    f: function() {
      return this.g + this.h;
    },
    getNeighbours: function() {
      return this.net.getNeighboursOf(this);
    },
    calcShortestDistanceTo: function(node) {
      return this.net.calcShortestDistance(this, node);
    }
  };

}).call(this);
